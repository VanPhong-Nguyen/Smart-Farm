// SPDX-License-Identifier: GPL-2.0-only
/*
 * Copyright (C) 2012 Texas Instruments Incorporated - https://www.ti.com/
 */
/dts-v1/;

#include "am33xx.dtsi"
#include "am335x-bone-common.dtsi"
#include "am335x-boneblack-common.dtsi"
#include "am335x-boneblack-hdmi.dtsi"

/ {
	model = "TI AM335x BeagleBone Black";
	compatible = "ti,am335x-bone-black", "ti,am335x-bone", "ti,am33xx";
};

&cpu0_opp_table {
	/*
	 * All PG 2.0 silicon may not support 1GHz but some of the early
	 * BeagleBone Blacks have PG 2.0 silicon which is guaranteed
	 * to support 1GHz OPP so enable it for PG 2.0 on this board.
	 */
	oppnitro-1000000000 {
		opp-supported-hw = <0x06 0x0100>;
	};
};

&gpio0 {
	gpio-line-names =
		"[mdio_data]",
		"[mdio_clk]",
		"P9_22 [spi0_sclk]",
		"P9_21 [spi0_d0]",
		"P9_18 [spi0_d1]",
		"P9_17 [spi0_cs0]",
		"[mmc0_cd]",
		"P8_42A [ecappwm0]",
		"P8_35 [lcd d12]",
		"P8_33 [lcd d13]",
		"P8_31 [lcd d14]",
		"P8_32 [lcd d15]",
		"P9_20 [i2c2_sda]",
		"P9_19 [i2c2_scl]",
		"P9_26 [uart1_rxd]",
		"P9_24 [uart1_txd]",
		"[rmii1_txd3]",
		"[rmii1_txd2]",
		"[usb0_drvvbus]",
		"[hdmi cec]",
		"P9_41B",
		"[rmii1_txd1]",
		"P8_19 [ehrpwm2a]",
		"P8_13 [ehrpwm2b]",
		"NC",
		"NC",
		"P8_14",
		"P8_17",
		"[rmii1_txd0]",
		"[rmii1_refclk]",
		"P9_11 [uart4_rxd]",
		"P9_13 [uart4_txd]";
};

&gpio1 {
	gpio-line-names =
		"P8_25 [mmc1_dat0]",
		"[mmc1_dat1]",
		"P8_5 [mmc1_dat2]",
		"P8_6 [mmc1_dat3]",
		"P8_23 [mmc1_dat4]",
		"P8_22 [mmc1_dat5]",
		"P8_3 [mmc1_dat6]",
		"P8_4 [mmc1_dat7]",
		"NC",
		"NC",
		"NC",
		"NC",
		"P8_12",
		"P8_11",
		"P8_16",
		"P8_15",
		"P9_15A",
		"P9_23",
		"P9_14 [ehrpwm1a]",
		"P9_16 [ehrpwm1b]",
		"[emmc rst]",
		"[usr0 led]",
		"[usr1 led]",
		"[usr2 led]",
		"[usr3 led]",
		"[hdmi irq]",
		"[usb vbus oc]",
		"[hdmi audio]",
		"P9_12",
		"P8_26",
		"P8_21 [emmc]",
		"P8_20 [emmc]";
};

&gpio2 {
	gpio-line-names =
		"P9_15B",
		"P8_18",
		"P8_7",
		"P8_8",
		"P8_10",
		"P8_9",
		"P8_45 [hdmi]",
		"P8_46 [hdmi]",
		"P8_43 [hdmi]",
		"P8_44 [hdmi]",
		"P8_41 [hdmi]",
		"P8_42 [hdmi]",
		"P8_39 [hdmi]",
		"P8_40 [hdmi]",
		"P8_37 [hdmi]",
		"P8_38 [hdmi]",
		"P8_36 [hdmi]",
		"P8_34 [hdmi]",
		"[rmii1_rxd3]",
		"[rmii1_rxd2]",
		"[rmii1_rxd1]",
		"[rmii1_rxd0]",
		"P8_27 [hdmi]",
		"P8_29 [hdmi]",
		"P8_28 [hdmi]",
		"P8_30 [hdmi]",
		"[mmc0_dat3]",
		"[mmc0_dat2]",
		"[mmc0_dat1]",
		"[mmc0_dat0]",
		"[mmc0_clk]",
		"[mmc0_cmd]";
};

&gpio3 {
	gpio-line-names =
		"[mii col]",
		"[mii crs]",
		"[mii rx err]",
		"[mii tx en]",
		"[mii rx dv]",
		"[i2c0 sda]",
		"[i2c0 scl]",
		"[jtag emu0]",
		"[jtag emu1]",
		"[mii tx clk]",
		"[mii rx clk]",
		"NC",
		"NC",
		"[usb vbus en]",
		"P9_31 [spi1_sclk]",
		"P9_29 [spi1_d0]",
		"P9_30 [spi1_d1]",
		"P9_28 [spi1_cs0]",
		"P9_42B [ecappwm0]",
		"P9_27",
		"P9_41A",
		"P9_25",
		"NC",
		"NC",
		"NC",
		"NC",
		"NC",
		"NC",
		"NC",
		"NC",
		"NC",
		"NC";
};

&am33xx_pinmux {
	i2c1_pins: pinmux_i2c1_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_UART1_RXD, PIN_INPUT_PULLUP, MUX_MODE3)	/* uart1_rxd.i2c1_sda */
			AM33XX_PADCONF(AM335X_PIN_UART1_TXD, PIN_INPUT_PULLUP, MUX_MODE3)	/* uart1_txd.i2c1_scl */
		>;
	};
	bb_spi1_pins: pinmux_bb_spi1_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_MCASP0_ACLKX, PIN_INPUT_PULLUP, MUX_MODE3)	/* mcasp0_aclkx.spi1_sclk,  INPUT_PULLUP | MODE3,	 */	
			AM33XX_PADCONF(AM335X_PIN_MCASP0_FSX, PIN_INPUT_PULLUP, MUX_MODE3)		/* mcasp0_fsx.spi1_d0,      INPUT_PULLUP | MODE3,	 */		
			AM33XX_PADCONF(AM335X_PIN_MCASP0_AXR0, PIN_OUTPUT_PULLUP, MUX_MODE3)	/* mcasp0_axr0.spi1_d1,    OUTPUT_PULLUP | MODE3,	 */	
			AM33XX_PADCONF(AM335X_PIN_MCASP0_AHCLKR, PIN_OUTPUT_PULLUP, MUX_MODE3)	/* mcasp0_ahclkr.spi1_cs0, OUTPUT_PULLUP | MODE3,	 */		
		>;
	};
	bb_lcd_pins: pinmux_bb_lcd_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_MCASP0_FSR, PIN_OUTPUT_PULLUP, MUX_MODE7)		/* gpio, dc,	OUTPUT_PULLUP | MODE07	*/			
			AM33XX_PADCONF(AM335X_PIN_MCASP0_AHCLKX, PIN_OUTPUT_PULLUP, MUX_MODE7)	/* gpio, reset,	OUTPUT_PULLUP | MODE07	*/			
		>;
	};
	bb_spi0_pins: pinmux_bb_spi0_pins {
	pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_SPI0_SCLK, PIN_INPUT_PULLUP, MUX_MODE0)	/* spi0_sclk,  INPUT_PULLUP | MODE0, 	P9_22 */	
			AM33XX_PADCONF(AM335X_PIN_SPI0_D0,   PIN_OUTPUT_PULLUP, MUX_MODE0)	/* spi0_d0,    INPUT_PULLUP | MODE0, 	P9_21 */		
			AM33XX_PADCONF(AM335X_PIN_SPI0_D1,   PIN_INPUT_PULLUP, MUX_MODE0)	/* spi0_d1,    OUTPUT_PULLUP | MODE0, 	P9_18 */	
			AM33XX_PADCONF(AM335X_PIN_SPI0_CS0,  PIN_OUTPUT_PULLUP, MUX_MODE0)	/* spi0_cs0,   OUTPUT_PULLUP | MODE0, 	P9_17 */
		>;
	};
	bb_touchscreen_pins: pinmux_bb_touchscreen_pins {
		pinctrl-single,pins = <
			AM33XX_PADCONF(AM335X_PIN_GPMC_A1,  PIN_INPUT_PULLUP, MUX_MODE7)	/* gpmc_a1,   OUTPUT_PULLUP | MODE0, 	P9_23 */
		>;
	};	
};

&i2c1 {
	pinctrl-names = "default";
	pinctrl-0 = <&i2c1_pins>;
	status = "okay";
};
&spi1 {
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&bb_spi1_pins>;

	lcd@0{
		compatible = "adafruit,yx240qv29";
		reg = <0>;
		pinctrl-names = "default";
		pinctrl-0 = <&bb_lcd_pins>;
		spi-max-frequency = <24000000>;
		rotation = <90>;
		dc-gpios    = <&gpio3 19 0>;   // lcd dc    P9.27 gpio3[19]
		reset-gpios = <&gpio3 21 0>;   // lcd reset P9.25 gpio3[21]
		status = "okay";
	};
};
&spi0 {
	#address-cells = <1>;
	#size-cells = <0>;

	status = "okay";
	pinctrl-names = "default";
	pinctrl-0 = <&bb_spi0_pins>;
	ti,pindir-d0-out-d1-in = <1>;

	touchscreen@0 {
		compatible = "ti,ads7846";
		spi-max-frequency = <100000>;   			
		interrupts = <17 IRQ_TYPE_EDGE_FALLING>;             
		interrupt-parent = <&gpio1>;
		pendown-gpio = <&gpio1 17 0>;      
		reg = <0>;
		#addr-size = <2>;
		#page-size = <32>;
		pinctrl-names = "default";
    	       pinctrl-0 = <&bb_touchscreen_pins>;

		/* driver defaults */
		ti,x-min = /bits/ 16 <0xB0>;
		ti,y-min = /bits/ 16 <0x231>;
		ti,x-max = /bits/ 16 <0xF49>;
		ti,y-max = /bits/ 16 <0xF6B>;
		ti,pressure-min = /bits/ 16 <0>;
		ti,pressure-max = /bits/ 16 <0xFF>;
		ti,x-plate-ohms = /bits/ 16 <0x96>;
		ti,swap_xy = /bits/ 16 <0>;
		ti,keep_vref_on = /bits/ 16 <0>;
		ti,cs = /bits/ 16 <1>;
		linux,wakeup;
	};
};

